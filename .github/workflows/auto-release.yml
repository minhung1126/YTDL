name: "Auto Release"

on:
  # Only trigger on push to the main branch
  push:
    branches:
      - "main"
  # Allow manual trigger
  workflow_dispatch:

jobs:
  auto-release:
    name: "Auto Release"
    runs-on: "ubuntu-latest"

    # Grant the GITHUB_TOKEN write permission to create a release
    permissions:
      contents: write

    steps:
      # Step 1: Checkout the repository code
      - name: "Checkout code"
        uses: actions/checkout@v4

      # Step 2: Extract the __version__ from YTDL.py
      - name: "Extract version from YTDL.py"
        id: version_extractor
        run: |
          # Find the line starting with __version__ to ignore commented lines
          VERSION=$(grep '^__version__' YTDL.py | cut -d '"' -f 2)
          echo "version=$VERSION" >> $GITHUB_OUTPUT
        
      # Step 3: Package YTDL.py and YTDL_mul.py into a zip file
      - name: "Package files into a zip"
        if: steps.version_extractor.outputs.version != 'dev'
        run: zip "YTDL.${{ steps.version_extractor.outputs.version }}.zip" YTDL.py YTDL_mul.py

      # Step 4: Create the new release using the extracted version
      - name: "Create Release"
        # Only run this step if the version is not 'dev'
        if: steps.version_extractor.outputs.version != 'dev'
        uses: "marvinpinto/action-automatic-releases@latest"
        with:
          # GitHub Token for authorization
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          # This is not a pre-release
          prerelease: false
          # Use the output from the 'version_extractor' step as the release tag
          automatic_release_tag: ${{ steps.version_extractor.outputs.version }}
          # (Optional) Set a title for the release
          title: "Release ${{ steps.version_extractor.outputs.version }}"
          # Add the zip file to the release assets
          files: |
            YTDL.${{ steps.version_extractor.outputs.version }}.zip